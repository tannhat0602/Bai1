@model Bai1.Models.EditFoodViewModel
@addTagHelper *, Microsoft.AspNetCore.Mvc.TagHelpers
@{
    ViewData["Title"] = "Edit";
}

<link href="https://cdn.jsdelivr.net/npm/bootstrap-icons@1.11.3/font/bootstrap-icons.css" rel="stylesheet" />

<div class="container py-5">
    <div class="card shadow-lg border-0 rounded-4 p-4" style="background: linear-gradient(to bottom right, #f9f9ff, #e0e7ff);">
        <h2 class="text-center text-primary fw-bold mb-4">
            <i class="bi bi-pencil-square me-2"></i>Chỉnh sửa món ăn
        </h2>

        <form asp-action="EditFood" method="post" enctype="multipart/form-data">
            @Html.HiddenFor(m => m.Id)

            <div class="row g-4">
                <div class="col-md-6">
                    <label class="form-label fw-semibold">Tên món</label>
                    <input asp-for="Name" class="form-control rounded-3 shadow-sm" />
                </div>

                <div class="col-md-6">
                    <label class="form-label fw-semibold">Giá bán</label>
                    <input asp-for="Price" class="form-control rounded-3 shadow-sm" />
                </div>

                <div class="col-12">
                    <label class="form-label fw-semibold">Mô tả</label>
                    <textarea asp-for="Description" rows="3" class="form-control rounded-3 shadow-sm"></textarea>
                </div>

                <div class="col-md-6">
                    <label class="form-label fw-semibold">Phân loại</label>
                    <select asp-for="CategoryId" class="form-select rounded-3 shadow-sm" asp-items="ViewBag.CategoryId"></select>
                </div>

                <div class="col-md-6">
                    <label class="form-label fw-semibold">Ảnh mới</label>
                    <input asp-for="Image" type="file" class="form-control rounded-3 shadow-sm" />
                    @if (!string.IsNullOrEmpty(Model.ImageUrl))
                    {
                        <img src="@Model.ImageUrl" class="mt-3 rounded shadow-sm" style="max-height: 150px;" />
                    }
                </div>

                <div class="col-12">
                    <label class="form-label fw-semibold">Toppings</label>
                    <div id="toppingContainer">
                        @for (int i = 0; i < Model.Toppings.Count; i++)
                        {
                            <div class="row g-2 mb-2 align-items-center topping-item">
                                <input type="hidden" name="Toppings[@i].Id" value="@Model.Toppings[i].Id" />
                                <input type="hidden" name="Toppings[@i].IsDeleted" value="false" />
                                <div class="col">
                                    <input name="Toppings[@i].Name" class="form-control rounded-2 shadow-sm" value="@Model.Toppings[i].Name" placeholder="Tên topping" />
                                </div>
                                <div class="col">
                                    <input name="Toppings[@i].Price" class="form-control rounded-2 shadow-sm" value="@Model.Toppings[i].Price" placeholder="Giá topping" />
                                </div>
                                <div class="col-auto">
                                    <button type="button" class="btn btn-outline-danger btn-sm rounded-circle" onclick="removeTopping(this)">
                                        <i class="bi bi-x-lg"></i>
                                    </button>
                                </div>
                            </div>
                        }
                    </div>

                    <button type="button" class="btn btn-outline-primary btn-sm rounded-pill mt-2" onclick="addTopping()">
                        <i class="bi bi-plus-circle me-1"></i> Thêm topping
                    </button>
                </div>

                <div class="col-12 text-end mt-4">
                    <button type="submit" class="btn btn-success px-4 py-2 rounded-pill shadow-sm">
                        <i class="bi bi-check-circle me-1"></i> Lưu thay đổi
                    </button>
                </div>
            </div>
        </form>
    </div>
</div>

@section Scripts {
    <script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/js/bootstrap.bundle.min.js"></script>
    <script>
        let toppingIndex = @Model.Toppings.Count;

        function addTopping() {
            const container = document.getElementById("toppingContainer");
            const row = document.createElement("div");
            row.className = "row g-2 mb-2 align-items-center topping-item";
            row.innerHTML = `
                <input type="hidden" name="Toppings[${toppingIndex}].IsDeleted" value="false" />
                <div class="col">
                    <input name="Toppings[${toppingIndex}].Name" class="form-control rounded-2 shadow-sm" placeholder="Tên topping" />
                </div>
                <div class="col">
                    <input name="Toppings[${toppingIndex}].Price" class="form-control rounded-2 shadow-sm" placeholder="Giá topping" />
                </div>
                <div class="col-auto">
                    <button type="button" class="btn btn-outline-danger btn-sm rounded-circle" onclick="removeTopping(this)">
                        <i class="bi bi-x-lg"></i>
                    </button>
                </div>`;
            container.appendChild(row);
            toppingIndex++;
        }

        function removeTopping(button) {
            const row = button.closest(".topping-item");
            const hiddenDelete = row.querySelector("input[name*='IsDeleted']");
            if (hiddenDelete) hiddenDelete.value = "true";
            row.style.display = "none";
        }
    </script>
}
